#!/usr/bin/env python
# Filename		: thumble
# Description		: Search through a given directory and create 100px wide resized copies of all images found, then format into a thumbnail gallery (HTML/CSS), with each thumbnail linked to its full-sized original.
# Author			: Dayo Adewunmi
# Email:			: jargonsummary@googlemail.com
# Date			: 20120304
# Version			: 0.7
# Usage			: 
# Notes			: 
# Python version	: 2.6.6
#==============================================================================

import os
import PIL
from PIL import Image
import re
import subprocess

def getPathname():
    """ Get pathname of current working directory."""
    absolutePath = os.getcwd()
    
    return absolutePath

def isImageFile(filename):
    """ Match files that are image files"""
    image_re = re.compile('\.gif$|\.jpe?g$|\.png$|\.svg$|\.tiff?$', re.I)
    return image_re.search(filename)

def isthumble(thumblefilename):
    """ Check if the first 8 characters of the target file is 'thumble_',
    then it's a thumbnail file that already exists, so don't overwrite."""
    if thumblefilename[:8] == "thumble_":
        return True
    else:
        return False

def createThumbs():
    """ Create thumbnails from images."""
    linebreak = 1

    newrow = '</div></div><div class="newrow">'
    samerow = '</div>'

    # Go through the filenames in the current directory again and
    # create thumbnails from images found.
    for dirname, subdirname, filenames in os.walk(getPathname()):
        for filename in filenames:
            # Find all images
            if isImageFile(filename):
                # First check if a corresponding thumbnail file already exists.
                # If it does, then return an error and skip thumbnail creation.
                if isthumble(filename):
                    print "Error: Thumbnail %s already exists. Skipping." %(filename)
                # Else go ahead and create a thumbnail from the source image.
                else:
                    # Resize an image (somepic.jpg) using PIL (Python Imaging Library)
                    # to a width of 300 pixels and a height proportional to the new width. 
                    # It does this by determining what percentage 300 pixels is of the 
                    # original width (img.size[0]) and then multiplying the original height 
                    # (img.size[1]) by that percentage. Change "basewidth" to any other 
                    # number to change the default width of your images.
                    basewidth = 100
                    img = Image.open(filename)
                    widthPercent = (basewidth/float(img.size[0]))
                    height = int((float(img.size[1])*float(widthPercent)))

                    img = img.resize((basewidth, height), PIL.Image.ANTIALIAS)
                    thumbname = 'thumble_' + filename
                    img.save(thumbname)

                    if linebreak % 5 == 0:
                        createGallery(filename,thumbname,newrow)
                    else:
                        createGallery(filename,thumbname,samerow)

                    linebreak = linebreak + 1

def createGallery(filename,thumbname,divtype):
    """ """
    thumb = '<div class="thumb"><a href="%s"><img src="%s" /></a>%s' %(filename,thumbname,divtype)
    writeFile.write(thumb)


def endIndexHTML():
    """ """
    endDivs = '</div>'
    endBodyTag = '</div></body></html>'

    bottom = endDivs + footer + endBodyTag

    writeFile.write(bottom)

# Create a file in write mode
indexFile = "index.html"
writeFile = open(indexFile, "w")

titleTag = '<html><head><title>Thumble - Image gallery</title>'
includeCSS = '<link href="thumbstyles.css" rel="stylesheet" type="text/css" /></head>'
header = titleTag + includeCSS

startBodyTag = '<body>'
howto = '<strong><h4></h4> To view full-size: click on image. To save a picture: right-click on image and click "Save Link As"</strong>'
startDivs = '<div id="container"><div class="newrow">'

footer = '<div id="footer">Thumbnail gallery generated by Thumble. Coded by Dayo Adewunmi. Powered by <a href="http://python.org">Python</a>. GPLv3.</div>'

top = header + startBodyTag + howto + startDivs

writeFile.write(top)

createThumbs()
endIndexHTML()

print ""

